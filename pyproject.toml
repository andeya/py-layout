# Poetry pyproject.toml: https://python-poetry.org/docs/pyproject/
[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "py-layout"
version = "1.0.5"
description = "Cookiecutter template for Python project"
readme = "README.md"
authors = ["Andeya <andeyalee@outlook.com>"]
license = "MIT"
repository = "https://github.com/andeya/py-layout"
homepage = "https://github.com/andeya/py-layout"
keywords = [
  "python",
  "cookiecutter",
  "template",
  "packages",
  "makefile",
  "best-practices",
  "poetry",
  "codestyle",
  "formatters",
  "python-packages",
  "semantic-versions",
]

# Pypi classifiers: https://pypi.org/classifiers/
classifiers = []

package-mode = false

[tool.poetry.dependencies]
python = ">=3.8,<4.0"
cookiecutter = "^2.6.0"

[tool.poetry.dev-dependencies]
packaging = "^23.1"
poetry-plugin-export = "^1.7.1"
pytest = "^8.1.1"
pytest-html = "^4.1.1"
pytest-cov = "^5.0.0"
bandit = "^1.7.1"
darglint = "^1.8.1"
pre-commit = "^2.21.0"
pydocstyle = "^6.1.1"
safety = "^2.3.5"
coverage = "^7.2.7"
coverage-badge = "^1.1.0"
ruff = "^0.4.4"
black = "^22.12"
isort = { extras = ["colors"], version = "^5.10.1" }

[tool.ruff]
# https://docs.astral.sh/ruff/settings
line-length = 120

# Exclude a variety of commonly ignored directories.
respect-gitignore = true
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
]

[tool.ruff.lint]
# https://beta.ruff.rs/docs/rules/
ignore-init-module-imports = true
select = ["E", "W", "F", "I"]
extend-select = ["I"]
ignore = ["F401"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable reformatting of code snippets in docstrings.
docstring-code-format = true
# Format all docstring code snippets with a line length of 60.
docstring-code-line-length = 60

[tool.isort]
# https://github.com/timothycrosley/isort/
py_version = 37
line_length = 44

sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
profile = "black"
include_trailing_comma = true
multi_line_output = 3
indent = 4
color_output = true


[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
python_version = "3.7"
pretty = true
show_traceback = true
color_output = true

allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true


[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs = [
  "{{ cookiecutter.package_name }}",
  "hooks",
  "*.egg",
  ".eggs",
  "dist",
  "build",
  "docs",
  ".tox",
  ".git",
  "__pycache__",
]
doctest_optionflags = [
  "NUMBER",
  "NORMALIZE_WHITESPACE",
  "IGNORE_EXCEPTION_DETAIL",
]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]


[tool.coverage.run]
source = ["tests"]
branch = true

[tool.coverage.paths]
source = ["hooks"]

[tool.coverage.report]
fail_under = 25
show_missing = true
